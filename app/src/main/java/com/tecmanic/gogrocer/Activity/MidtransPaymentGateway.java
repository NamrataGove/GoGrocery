package com.tecmanic.gogrocer.Activity;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;

import com.midtrans.sdk.corekit.callback.TransactionFinishedCallback;
import com.midtrans.sdk.corekit.core.LocalDataHandler;
import com.midtrans.sdk.corekit.core.MidtransSDK;
import com.midtrans.sdk.corekit.core.TransactionRequest;
import com.midtrans.sdk.corekit.core.themes.CustomColorTheme;
import com.midtrans.sdk.corekit.models.BillInfoModel;
import com.midtrans.sdk.corekit.models.ItemDetails;
import com.midtrans.sdk.corekit.models.UserAddress;
import com.midtrans.sdk.corekit.models.UserDetail;
import com.midtrans.sdk.corekit.models.snap.TransactionResult;
import com.midtrans.sdk.uikit.SdkUIFlowBuilder;
import com.tecmanic.gogrocer.R;

import java.util.ArrayList;
import java.util.Random;

public class MidtransPaymentGateway extends Activity {

    private static final String TAG = "MidtransPaymentGateway";
    private static String TRANSACTION_ID = "";

    public static String random() {
        Random generator = new Random();
        StringBuilder randomStringBuilder = new StringBuilder();
        int randomLength = generator.nextInt(250);
        char tempChar;
        for (int i = 0; i < randomLength; i++) {
            tempChar = (char) (generator.nextInt(96) + 32);
            randomStringBuilder.append(tempChar);
        }
        return randomStringBuilder.toString();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_midtrans_payment_gateway);
        SdkUIFlowBuilder.init()
                .setClientKey("SB-Mid-client-Zt-2-7osMnT8NIQA") // client_key is mandatory
                .setContext(this) // context is mandatory
                .setTransactionFinishedCallback(new TransactionFinishedCallback() {
                    @Override
                    public void onTransactionFinished(TransactionResult result) {
                        Log.i(TAG, result.getResponse().getTransactionId());
                        if (!result.isTransactionCanceled()) {

                        }
                    }
                }) // set transaction finish callback (sdk callback)
                .setMerchantBaseUrl("http://freshbybatari.com/gogrocer-ver2.0/api/midtrans_payment/") //set merchant url (required)
//                .setMerchantBaseUrl("https://app.sandbox.midtrans.com/") //set merchant url (required)
                .enableLog(true)
                // enable sdk log (optional)
                // set theme. it will replace theme on snap theme on MAP ( optional)
//                .setColorTheme(new CustomColorTheme("#FFE51255", "#B61548", "#FFE51255"))
                .buildSDK();


        TRANSACTION_ID = random();

        UserDetail userDetail = LocalDataHandler.readObject("user_details", UserDetail.class);
        if (userDetail == null) {
            userDetail = new UserDetail();
            userDetail.setUserFullName("Budi Utomo");
            userDetail.setEmail("budi@utomo.com");
            userDetail.setPhoneNumber("08123456789");
            // set user ID as identifier of saved card (can be anything as long as unique),
            // randomly generated by SDK if not supplied
            userDetail.setUserId("budi-6789");

            ArrayList<UserAddress> userAddresses = new ArrayList<>();
            UserAddress userAddress = new UserAddress();
            userAddress.setAddress("Jalan Andalas Gang Sebelah No. 1");
            userAddress.setCity("Jakarta");
            userAddress.setAddressType(com.midtrans.sdk.corekit.core.Constants.ADDRESS_TYPE_BOTH);
            userAddress.setZipcode("131001");
            userAddress.setCountry("IDN");
            userAddresses.add(userAddress);
            userDetail.setUserAddresses(userAddresses);
            LocalDataHandler.saveObject("user_details", userDetail);
        }

        TransactionRequest transactionRequest = new TransactionRequest(TRANSACTION_ID, 1.0);
        ItemDetails itemDetails1 = new ItemDetails("1", 1.0, 1, "Demo Charges");
        ItemDetails itemDetails2 = new ItemDetails("1", 2.0, 1, "Demo 2 Charges");

// Create array list and add above item details in it and then set it to transaction request.
        ArrayList<ItemDetails> itemDetailsList = new ArrayList<>();
        itemDetailsList.add(itemDetails1);
        itemDetailsList.add(itemDetails2);

// Set item details into the transaction request.
        transactionRequest.setItemDetails(itemDetailsList);

        BillInfoModel billInfoModel = new BillInfoModel("BILL2020", "3.0");
// Set the bill info on transaction details
        transactionRequest.setBillInfoModel(billInfoModel);
        MidtransSDK.getInstance().setTransactionRequest(transactionRequest);
        MidtransSDK.getInstance().startPaymentUiFlow(this);
    }
}
